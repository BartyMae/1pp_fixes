// 1ppv2 BASE cut and updated
// go 2004!


 ACTION_FOR_EACH ~item~ IN ~blun04~ ~blun06~  BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) THEN BEGIN
      COPY_EXISTING ~%item%.itm~ ~override~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 16)) BEGIN // set item color, weapon head
      WRITE_BYTE ("%gfx_off%" + 0x0C + (0x30 * ("%gfx_num%" - 1))) 2
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
  END
  END
  
  
  ACTION_IF (FILE_EXISTS_IN_GAME ~clck31.itm~) THEN BEGIN
COPY_EXISTING ~clck31.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ICLCK21~
  END
  BUT_ONLY_IF_IT_CHANGES
  END

/*    ACTION_IF (FILE_EXISTS_IN_GAME ~compon05.itm~) THEN BEGIN // Roranach's Horn getting weird IWD graphic
COPY_EXISTING ~compon05.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~H0~
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~IHELM06~
    READ_LONG  0x6a "gfx_off"
    READ_SHORT 0x70 "gfx_num"
    WHILE ("%gfx_num%" > 0) BEGIN
      READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
      READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
      PATCH_IF (("%type%" = 7) AND ("%part%" = 53)) BEGIN // set item color, helm exterior
        WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 67
      END
      PATCH_IF (("%type%" = 7) AND ("%part%" = 48)) BEGIN // set item color, helm wings
        WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 19
      END
      SET "gfx_num" = ("%gfx_num%" - 1)
    END
  END
  BUT_ONLY_IF_IT_CHANGES
END*/
  
  
   /*ACTION_FOR_EACH ~item~ IN ~dagg21~ ~dagg22~  BEGIN // Dagger of the Star getting Shadow Thief Dagger icon
    ACTION_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) THEN BEGIN
      COPY_EXISTING ~%item%.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~idagg18~
    READ_LONG 0x64 "abil_off"
    READ_SHORT 0x68 "abil_num"
    WHILE ("%abil_num%" > 0) BEGIN
      READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
      PATCH_IF ("%type%" = 1) BEGIN
        WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
        WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~idagg18~
      END
      SET "abil_num" = ("%abil_num%" - 1)
    END
  END
  BUT_ONLY_IF_IT_CHANGES
END
END*/
  
  
    ACTION_IF (FILE_EXISTS_IN_GAME ~demosum4.itm~) THEN BEGIN
COPY_EXISTING ~demosum4.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISW2H03~
    READ_LONG  0x64 "abil_off"
    READ_SHORT 0x68 "abil_num"
    WHILE ("%abil_num%" > 0) BEGIN
      READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
      PATCH_IF ("%type%" = 1) BEGIN
        WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
        WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW2H03~
      END
      SET "abil_num" = ("%abil_num%" - 1)
    END
  END
  BUT_ONLY_IF_IT_CHANGES
  END
  
    ACTION_IF (FILE_EXISTS_IN_GAME ~halb07.itm~) THEN BEGIN // Why?
  COPY_EXISTING ~halb07.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ihalb07~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 16)) BEGIN // set item color, weapon head
      WRITE_BYTE ("%gfx_off%" + 0x0C + (0x30 * ("%gfx_num%" - 1))) 2
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
  END

   ACTION_FOR_EACH ~item~ IN ~helm02~ ~helm08~ ~helm17~ ~helm21~ ~helm22~   BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) THEN BEGIN
      COPY_EXISTING ~%item%.itm~ ~override~
  WRITE_ASCII 0x22 ~H4~
  BUT_ONLY_IF_IT_CHANGES
END
END
  
  ACTION_FOR_EACH ~item~ IN ~helm03~ ~helm12~   BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) THEN BEGIN
      COPY_EXISTING ~%item%.itm~ ~override~
  WRITE_ASCII 0x22 ~H2~
  BUT_ONLY_IF_IT_CHANGES
  END
  END

  	    ACTION_IF (FILE_EXISTS_IN_GAME ~helm04.itm~) THEN BEGIN
COPY_EXISTING ~helm04.itm~ ~override~
  WRITE_ASCII 0x22 ~H5~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ihelm07~
  BUT_ONLY_IF_IT_CHANGES
  END

    ACTION_IF (FILE_EXISTS_IN_GAME ~helm05.itm~) THEN BEGIN
COPY_EXISTING ~helm05.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ihelm05~
  BUT_ONLY_IF_IT_CHANGES
  END

    ACTION_IF (FILE_EXISTS_IN_GAME ~helm06.itm~) THEN BEGIN
COPY_EXISTING ~helm06.itm~ ~override~
  WRITE_ASCII 0x22 ~H5~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ihelm05~
  BUT_ONLY_IF_IT_CHANGES
END
  
  ACTION_FOR_EACH ~item~ IN ~helm09~ ~helm16~   BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) THEN BEGIN
      COPY_EXISTING ~%item%.itm~ ~override~  
  WRITE_ASCII 0x22 ~H3~
  BUT_ONLY_IF_IT_CHANGES
END
END
  
   ACTION_FOR_EACH ~item~ IN ~helm10~ ~helm15~   BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) THEN BEGIN
      COPY_EXISTING ~%item%.itm~ ~override~  
  WRITE_ASCII 0x22 ~H5~
  BUT_ONLY_IF_IT_CHANGES
  END
  END

  	    ACTION_IF (FILE_EXISTS_IN_GAME ~helm11.itm~) THEN BEGIN
COPY_EXISTING ~helm11.itm~ ~override~
  WRITE_ASCII 0x22 ~H0~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ihelm00~
  BUT_ONLY_IF_IT_CHANGES
END
  
  	    ACTION_IF (FILE_EXISTS_IN_GAME ~helm13.itm~) THEN BEGIN
COPY_EXISTING ~helm13.itm~ ~override~
  WRITE_ASCII 0x22 ~H3~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ihelm03~
  BUT_ONLY_IF_IT_CHANGES
  END

  	    ACTION_IF (FILE_EXISTS_IN_GAME ~helm31.itm~) THEN BEGIN
COPY_EXISTING ~helm31.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~H3~
    READ_LONG  0x6a "gfx_off"
    READ_SHORT 0x70 "gfx_num"
    WHILE ("%gfx_num%" > 0) BEGIN
      READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
      READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
      PATCH_IF (("%type%" = 7) AND ("%part%" = 53)) BEGIN // set item color, helm exterior
        WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 21
      END
      PATCH_IF (("%type%" = 7) AND ("%part%" = 48)) BEGIN // set item color, helm wings
        WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 29
      END
      PATCH_IF (("%type%" = 7) AND ("%part%" = 52)) BEGIN // set item color, unknown (52)
        WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 43
      END
      SET "gfx_num" = ("%gfx_num%" - 1)
    END
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
  	    ACTION_IF (FILE_EXISTS_IN_GAME ~helm32.itm~) THEN BEGIN
COPY_EXISTING ~helm32.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~H4~
    READ_LONG  0x6a "gfx_off"
    READ_SHORT 0x70 "gfx_num"
    WHILE ("%gfx_num%" > 0) BEGIN
      READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
      READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
      PATCH_IF (("%type%" = 7) AND ("%part%" = 53)) BEGIN // set item color, helm exterior
        WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 29
      END
      PATCH_IF (("%type%" = 7) AND ("%part%" = 48)) BEGIN // set item color, helm wings
        WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 21
      END
      PATCH_IF (("%type%" = 7) AND ("%part%" = 52)) BEGIN // set item color, unknown (52)
        WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 66
      END
      SET "gfx_num" = ("%gfx_num%" - 1)
    END
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
  	    ACTION_IF (FILE_EXISTS_IN_GAME ~helm33.itm~) THEN BEGIN
COPY_EXISTING ~helm33.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_ASCII 0x22 ~H0~
  END
  BUT_ONLY_IF_IT_CHANGES
	END
  
  ACTION_FOR_EACH ~item~ IN ~killsw01~ ~sw1h06~    BEGIN // Why?
    ACTION_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) THEN BEGIN
      COPY_EXISTING ~%item%.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISW1H06~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  WHILE ("%abil_num%" > 0) BEGIN
    READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
    PATCH_IF ("%type%" = 1) BEGIN
      WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
      WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW1H06~
    END
    SET "abil_num" = ("%abil_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END
END
  
  ACTION_FOR_EACH ~item~ IN ~quiver02~ ~quiver04~  BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) THEN BEGIN
      COPY_EXISTING ~%item%.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_ASCII 0x3A ~IBOLTS01~
  END
  BUT_ONLY_IF_IT_CHANGES
  END 
  END

  ACTION_FOR_EACH ~item~ IN ~quiver05~ ~quiver06~    BEGIN
    ACTION_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) THEN BEGIN
      COPY_EXISTING ~%item%.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_ASCII 0x3A ~IQBULL02~
  END
  BUT_ONLY_IF_IT_CHANGES
  END
  END

      ACTION_IF (FILE_EXISTS_IN_GAME ~shld01.itm~) THEN BEGIN
	  COPY_EXISTING ~shld01.itm~ ~override~ // adds one effect
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD01~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD01~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD01~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 28
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 30
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld02.itm~) THEN BEGIN
COPY_EXISTING ~shld02.itm~ ~override~ // adds one effect
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD02~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD01~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD02~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 24
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 25
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 34)) BEGIN // deletes shield panel if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 29  // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 34  // shield panel
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 1)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
END
  
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld03.itm~) THEN BEGIN
COPY_EXISTING ~shld03.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD03~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD03~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD03~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 100
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 70
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld04.itm~) THEN BEGIN
COPY_EXISTING ~shld04.itm~ ~override~ // adds one effect
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD04~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD03~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD04~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 30
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 99
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 34)) BEGIN // deletes shield panel if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 8   // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 34  // shield panel
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 1)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
END


    ACTION_IF (FILE_EXISTS_IN_GAME ~shld05.itm~) THEN BEGIN  
COPY_EXISTING ~shld05.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD05~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD05~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD05~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 28
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 111
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld06.itm~) THEN BEGIN
COPY_EXISTING ~shld06.itm~ ~override~ // adds two effects
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD06~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD05~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD06~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 30
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 7
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 34)) BEGIN // deletes shield panel if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    PATCH_IF (("%type%" = 7) AND (("%part%" = 33) OR ("%part%" = 34))) BEGIN // deletes unknown (33)/shield panel if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 8   // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 34  // shield panel
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 6   // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 33  // unknown (33)
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 2)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
END


    ACTION_IF (FILE_EXISTS_IN_GAME ~shld07.itm~) THEN BEGIN  
COPY_EXISTING ~shld07.itm~ ~override~ // adds two effects
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD07~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD05~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD07~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND (("%part%" = 37) OR ("%part%" = 32))) BEGIN // set item color, shld body/shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 25
    END
    PATCH_IF (("%type%" = 7) AND (("%part%" = 33) OR ("%part%" = 34))) BEGIN // deletes unknown (33)/shield panel if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 8   // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 34  // shield panel
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 6   // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 33  // unknown (33)
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 2)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld08.itm~) THEN BEGIN
COPY_EXISTING ~shld08.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD08~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD08~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD08~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 28
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 30
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld09.itm~) THEN BEGIN
COPY_EXISTING ~shld09.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD09~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD08~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD09~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 22
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 23
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld10.itm~) THEN BEGIN
COPY_EXISTING ~shld10.itm~ ~override~ // adds one effect
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD10~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD08~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD10~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 28
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 26
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 36)) BEGIN // deletes unknown (36) if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 26  // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 36  // unknown (36)
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 1)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
  END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld11.itm~) THEN BEGIN
COPY_EXISTING ~shld11.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD11~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD01~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD01~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 28
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 30
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
  END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld12.itm~) THEN BEGIN
COPY_EXISTING ~shld12.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD12~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD01~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD01~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 27
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 30
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
  END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld13.itm~) THEN BEGIN
COPY_EXISTING ~shld13.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD13~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD03~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD03~
  BUT_ONLY_IF_IT_CHANGES
  END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld14.itm~) THEN BEGIN
COPY_EXISTING ~shld14.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD14~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD03~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD03~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 30
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 10
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
  END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld15.itm~) THEN BEGIN
COPY_EXISTING ~shld15.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD15~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD05~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD05~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 27
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 19
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
  END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld16.itm~) THEN BEGIN
COPY_EXISTING ~shld16.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD16~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD05~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD05~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 28
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 19
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END


    ACTION_IF (FILE_EXISTS_IN_GAME ~shld17.itm~) THEN BEGIN  
COPY_EXISTING ~shld17.itm~ ~override~ // adds one effect
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD17~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD08~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD17~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 17
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 93
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 36)) BEGIN // deletes unknown (36) if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 18  // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 36  // unknown (36)
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 1)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
  END
  
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld18.itm~) THEN BEGIN
COPY_EXISTING ~shld18.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD15~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD05~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD05~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 27
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 19
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END


    ACTION_IF (FILE_EXISTS_IN_GAME ~shld19.itm~) THEN BEGIN  
COPY_EXISTING ~shld19.itm~ ~override~ // adds two effects
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD19~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD05~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD19~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND (("%part%" = 37) OR ("%part%" = 32))) BEGIN // set item color, shld body/shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 50
    END
    PATCH_IF (("%type%" = 7) AND (("%part%" = 36) OR ("%part%" = 34))) BEGIN // deletes unknown (36)/shield panel if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 66  // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 34  // shield panel
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x08) 36  // unknown (36)
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 2)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
  END
  
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld20.itm~) THEN BEGIN
COPY_EXISTING ~shld20.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD20~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD08~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD20~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND (("%part%" = 37) OR ("%part%" = 32))) BEGIN // set item color, shld body/hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 24
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END


    ACTION_IF (FILE_EXISTS_IN_GAME ~shld21.itm~) THEN BEGIN  
COPY_EXISTING ~shld21.itm~ ~override~ // adds one effect
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLDDS~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD03~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 34)) BEGIN // deletes shield panel if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 19  // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 34  // shield panel
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 1)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
END

    ACTION_IF (FILE_EXISTS_IN_GAME ~shld23.itm~) THEN BEGIN  
COPY_EXISTING ~shld23.itm~ ~override~ // adds two effects
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLDFS~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD05~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD05~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND (("%part%" = 37) OR ("%part%" = 32))) BEGIN // set item color, shld body/shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 31
    END
    PATCH_IF (("%type%" = 7) AND (("%part%" = 33) OR ("%part%" = 34))) BEGIN // deletes unknown (33)/shield panel if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 18  // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 34  // shield panel
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 18  // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 33  // unknown (33)
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 2)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld24.itm~) THEN BEGIN
COPY_EXISTING ~shld24.itm~ ~override~ // adds one effect
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLDRF~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD01~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD08~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND (("%part%" = 37) OR ("%part%" = 32))) BEGIN // set item color, shld body/shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 26
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 34)) BEGIN // deletes shield panel if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 63  // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 34  // shield panel
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 1)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
  END
  
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld25.itm~) THEN BEGIN
COPY_EXISTING ~shld25.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLDHM~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD01~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD02~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND (("%part%" = 37) OR ("%part%" = 32))) BEGIN // set item color, shld body/hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 31
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 34)) BEGIN // set item color, shld body/hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 17
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
  END

      ACTION_IF (FILE_EXISTS_IN_GAME ~shld26.itm~) THEN BEGIN
COPY_EXISTING ~shld26.itm~ ~override~ // adds one effect
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLDVR~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD03~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD03~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 48
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 58
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 34)) BEGIN // deletes shield panel if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 58  // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 34  // shield panel
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 1)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld27.itm~) THEN BEGIN
COPY_EXISTING ~shld27.itm~ ~override~ // adds one effect
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLDGN~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD03~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD04~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 30
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 96
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 34)) BEGIN // deletes shield panel if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 18  // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 34  // shield panel
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 1)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
END

    ACTION_IF (FILE_EXISTS_IN_GAME ~shld28.itm~) THEN BEGIN
  COPY_EXISTING ~shld28.itm~ ~override~ // adds one effect
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLDK2~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD01~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD08~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body/shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 46
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld body/shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 26
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 34)) BEGIN // deletes shield panel if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 29  // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 34  // shield panel
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 1)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld29.itm~) THEN BEGIN
COPY_EXISTING ~shld29.itm~ ~override~ // adds one effect
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD13~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD03~
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD03~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body/shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 38
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld body/shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 21
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 34)) BEGIN // deletes shield panel if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 66  // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 34  // shield panel
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 1)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld30.itm~) THEN BEGIN
COPY_EXISTING ~shld30.itm~ ~override~ // adds one effect
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISHLD07~
  WRITE_LONG  0x48 0
  WRITE_ASCII 0x44 ~GSHLD05~
  WRITE_LONG  0x50 6820
  WRITE_LONG  0x5C 0
  WRITE_ASCII 0x58 ~CSHLD06~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  SET "gfx_num_orig" = "%gfx_num%"
  SET "gfx_delta" = 0
  WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND (("%part%" = 37) OR ("%part%" = 32))) BEGIN // set item color, shld body/shld hub
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 25
    END
    PATCH_IF (("%type%" = 7) AND ("%part%" = 34)) BEGIN // deletes shield panel if present to make way for new one
      DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
      SET "gfx_delta" = ("%gfx_delta%" - 1)
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
    WRITE_SHORT ("%gfx_off%")        7   // set item color
    WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
    WRITE_LONG  ("%gfx_off%" + 0x04) 66  // color index
    WRITE_LONG  ("%gfx_off%" + 0x08) 34  // shield panel
    WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
    WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
  SET "gfx_delta" = ("%gfx_delta%" + 1)
  WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
    READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
    WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
    SET "abil_num" = ("%abil_num%" - 1)
  END
  WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~shld31.itm~) THEN BEGIN
COPY_EXISTING ~shld31.itm~ ~override~ // adds one effect
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISHLDZS~
    WRITE_LONG  0x48 0
    WRITE_ASCII 0x44 ~GSHLD05~
    WRITE_LONG  0x5C 0
    WRITE_ASCII 0x58 ~CSHLD07~
    READ_LONG  0x64 "abil_off"
    READ_SHORT 0x68 "abil_num"
    READ_LONG  0x6a "gfx_off"
    READ_SHORT 0x70 "gfx_num"
    SET "gfx_num_orig" = "%gfx_num%"
    SET "gfx_delta" = 0
    WHILE ("%gfx_num%" > 0) BEGIN // searches for effect we're adding
      READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
      READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
      PATCH_IF (("%type%" = 7) AND ("%part%" = 37)) BEGIN // set item color, shld body/shld hub
        WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 31
      END
      PATCH_IF (("%type%" = 7) AND ("%part%" = 32)) BEGIN // set item color, shld body/shld hub
        WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 20
      END
      PATCH_IF (("%type%" = 7) AND ("%part%" = 34)) BEGIN // deletes shield panel if present to make way for new one
        DELETE_BYTES ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) 0x30
        SET "gfx_delta" = ("%gfx_delta%" - 1)
      END
      SET "gfx_num" = ("%gfx_num%" - 1)
    END
    INSERT_BYTES ("%gfx_off%") 0x30 // adds new effect
      WRITE_SHORT ("%gfx_off%")        7   // set item color
      WRITE_BYTE  ("%gfx_off%" + 0x02) 1   // target self
      WRITE_LONG  ("%gfx_off%" + 0x04) 21  // color index
      WRITE_LONG  ("%gfx_off%" + 0x08) 34  // shield panel
      WRITE_BYTE  ("%gfx_off%" + 0x0C) 2   // instant/while equipped
      WRITE_BYTE  ("%gfx_off%" + 0x12) 100 // probability 2
    SET "gfx_delta" = ("%gfx_delta%" + 1)
    WHILE (("%abil_num%" > 0) AND NOT ("%gfx_delta%" = 0)) BEGIN // if abilities are present, need to adjust their effects index
      READ_SHORT  (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) "fx_idx"
      WRITE_SHORT (0x20 + "%abil_off%" + (("%abil_num%" - 1) * 0x38)) ("%fx_idx%" + "%gfx_delta%")
      SET "abil_num" = ("%abil_num%" - 1)
    END
    WRITE_SHORT 0x70 ("%gfx_num_orig%" + "%gfx_delta%")
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
  // SWORDS effects
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h16.itm~) THEN BEGIN
COPY_EXISTING ~sw1h16.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISW1H16~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  WHILE ("%abil_num%" > 0) BEGIN
    READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
    PATCH_IF ("%type%" = 1) BEGIN
      WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
      WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW1H16~
    END
    SET "abil_num" = ("%abil_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h18.itm~) THEN BEGIN
COPY_EXISTING ~sw1h18.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISW1HBS~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  WHILE ("%abil_num%" > 0) BEGIN
    READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
    PATCH_IF ("%type%" = 1) BEGIN
      WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
      WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW1HBS~
    END
    SET "abil_num" = ("%abil_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END

    ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h23.itm~) THEN BEGIN // Why?
COPY_EXISTING ~sw1h23.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISW1H23~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  WHILE ("%abil_num%" > 0) BEGIN
    READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
    PATCH_IF ("%type%" = 1) BEGIN
      WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
      WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW1H23~
    END
    SET "abil_num" = ("%abil_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
  END

      ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h24.itm~) THEN BEGIN
COPY_EXISTING ~sw1h24.itm~ ~override~
  READ_LONG  0x6a "gfx_off"
  READ_SHORT 0x70 "gfx_num"
  WHILE ("%gfx_num%" > 0) BEGIN
    READ_SHORT ("%gfx_off%" +        (0x30 * ("%gfx_num%" - 1))) "type"
    READ_LONG  ("%gfx_off%" + 0x08 + (0x30 * ("%gfx_num%" - 1))) "part"
    PATCH_IF (("%type%" = 7) AND (("%part%" = 20) OR ("%part%" = 21))) BEGIN // set item color, wpn head/blade minor or wpn grip/staff minor
      WRITE_LONG ("%gfx_off%" + 0x04 + (0x30 * ("%gfx_num%" - 1))) 67
    END
    SET "gfx_num" = ("%gfx_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
/*      ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h31.itm~) THEN BEGIN // Daystar's icon getting set to Albruin
COPY_EXISTING ~sw1h31.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISW1H31~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  WHILE ("%abil_num%" > 0) BEGIN
    READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
    PATCH_IF ("%type%" = 1) BEGIN
      WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
      WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW1H31~
    END
    SET "abil_num" = ("%abil_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h34.itm~) THEN BEGIN // Albruin's icon getting set to Daystar
COPY_EXISTING ~sw1h34.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISW1H34~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  WHILE ("%abil_num%" > 0) BEGIN
    READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
    PATCH_IF ("%type%" = 1) BEGIN
      WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
      WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW1H34~
    END
    SET "abil_num" = ("%abil_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END*/
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h41.itm~) THEN BEGIN // Why?
COPY_EXISTING ~sw1h41.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISW1H41~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  WHILE ("%abil_num%" > 0) BEGIN
    READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
    PATCH_IF ("%type%" = 1) BEGIN
      WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
      WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW1H41~
    END
    SET "abil_num" = ("%abil_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END

    ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h52.itm~) THEN BEGIN
COPY_EXISTING ~sw1h52.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISW1H52~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  WHILE ("%abil_num%" > 0) BEGIN
    READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
    PATCH_IF ("%type%" = 1) BEGIN
      WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
      WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW1H52~
    END
    SET "abil_num" = ("%abil_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h59.itm~) THEN BEGIN
COPY_EXISTING ~sw1h59.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISW1H59~
    READ_LONG  0x64 "abil_off"
    READ_SHORT 0x68 "abil_num"
    WHILE ("%abil_num%" > 0) BEGIN
      READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
      PATCH_IF ("%type%" = 1) BEGIN
        WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
        WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW1H59~
      END
      SET "abil_num" = ("%abil_num%" - 1)
    END
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h61.itm~) THEN BEGIN
COPY_EXISTING ~sw1h61.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISW1H61~
    READ_LONG  0x64 "abil_off"
    READ_SHORT 0x68 "abil_num"
    WHILE ("%abil_num%" > 0) BEGIN
      READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
      PATCH_IF ("%type%" = 1) BEGIN
        WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
        WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW1H61~
      END
      SET "abil_num" = ("%abil_num%" - 1)
    END
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h63.itm~) THEN BEGIN
COPY_EXISTING ~sw1h63.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISW1H63~
    READ_LONG  0x64 "abil_off"
    READ_SHORT 0x68 "abil_num"
    WHILE ("%abil_num%" > 0) BEGIN
      READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
      PATCH_IF ("%type%" = 1) BEGIN
        WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
        WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW1H63~
      END
      SET "abil_num" = ("%abil_num%" - 1)
    END
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h65.itm~) THEN BEGIN
COPY_EXISTING ~sw1h65.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISW1H65~
    READ_LONG  0x64 "abil_off"
    READ_SHORT 0x68 "abil_num"
    WHILE ("%abil_num%" > 0) BEGIN
      READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
      PATCH_IF ("%type%" = 1) BEGIN
        WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
        WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW1H65~
      END
      SET "abil_num" = ("%abil_num%" - 1)
    END
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h69.itm~) THEN BEGIN
COPY_EXISTING ~sw1h69.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISW1H69~
    READ_LONG  0x64 "abil_off"
    READ_SHORT 0x68 "abil_num"
    WHILE ("%abil_num%" > 0) BEGIN
      READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
      PATCH_IF ("%type%" = 1) BEGIN
        WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
        WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW1H69~
      END
      SET "abil_num" = ("%abil_num%" - 1)
    END
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
      ACTION_IF (FILE_EXISTS_IN_GAME ~sw1h71.itm~) THEN BEGIN
COPY_EXISTING ~sw1h71.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISW1H71~
    READ_LONG  0x64 "abil_off"
    READ_SHORT 0x68 "abil_num"
    WHILE ("%abil_num%" > 0) BEGIN
      READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
      PATCH_IF ("%type%" = 1) BEGIN
        WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
        WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW1H71~
      END
      SET "abil_num" = ("%abil_num%" - 1)
    END
  END
  BUT_ONLY_IF_IT_CHANGES
END
  
  ACTION_FOR_EACH ~item~ IN ~sw2h10~ ~sw2h19~    BEGIN // Why?
    ACTION_IF (FILE_EXISTS_IN_GAME ~%item%.itm~) THEN BEGIN
      COPY_EXISTING ~%item%.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISW2H10~
    READ_LONG  0x64 "abil_off"
    READ_SHORT 0x68 "abil_num"
    WHILE ("%abil_num%" > 0) BEGIN
      READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
      PATCH_IF ("%type%" = 1) BEGIN
        WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
        WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW2H10~
      END
      SET "abil_num" = ("%abil_num%" - 1)
    END
  END
  BUT_ONLY_IF_IT_CHANGES
END
END
  
   ACTION_IF (FILE_EXISTS_IN_GAME ~sw2h11.itm~) THEN BEGIN // Why?
COPY_EXISTING ~sw2h11.itm~ ~override~
  WRITE_LONG  0x3E 0
  WRITE_ASCII 0x3A ~ISW2H11~
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  WHILE ("%abil_num%" > 0) BEGIN
    READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
    PATCH_IF ("%type%" = 1) BEGIN
      WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
      WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW2H11~
    END
    SET "abil_num" = ("%abil_num%" - 1)
  END
  BUT_ONLY_IF_IT_CHANGES
  END

     ACTION_IF (FILE_EXISTS_IN_GAME ~sw2h20.itm~) THEN BEGIN // Why?
COPY_EXISTING ~sw2h20.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_LONG  0x3E 0
    WRITE_ASCII 0x3A ~ISW2H20~
    READ_LONG  0x64 "abil_off"
    READ_SHORT 0x68 "abil_num"
    WHILE ("%abil_num%" > 0) BEGIN
      READ_BYTE ("%abil_off%" + (0x38 * ("%abil_num%" - 1))) "type"
      PATCH_IF ("%type%" = 1) BEGIN
        WRITE_LONG  ("%abil_off%" + 0x08 + (0x38 * ("%abil_num%" - 1))) 0
        WRITE_ASCII ("%abil_off%" + 0x04 + (0x38 * ("%abil_num%" - 1))) ~ISW2H20~
      END
      SET "abil_num" = ("%abil_num%" - 1)
    END
  END
  BUT_ONLY_IF_IT_CHANGES
  END
  
  // COPY 1ppv2 BAMs
  
PRINT ~Copying...~
COPY ~1pp/item/v2_copy/cshld19.bam~  ~override~
COPY ~1pp/item/v2_copy/cshld20.bam~  ~override~
COPY ~1pp/item/v2_copy/iax1h01.bam~  ~override~
//COPY ~1pp/item/v2_copy/iax1h14.bam~  ~override~ // Axe of the Unyielding getting weird IWD icon
COPY ~1pp/item/v2_copy/iblun01.bam~  ~override~
COPY ~1pp/item/v2_copy/iblun04.bam~  ~override~
COPY ~1pp/item/v2_copy/iblun05.bam~  ~override~
COPY ~1pp/item/v2_copy/iblun06.bam~  ~override~
COPY ~1pp/item/v2_copy/iblun26.bam~  ~override~
COPY ~1pp/item/v2_copy/ibolts01.bam~ ~override~
//COPY ~1pp/item/v2_copy/ibow26.bam~   ~override~ // Short Bow +3 getting weird IWD icon
COPY ~1pp/item/v2_copy/ichan04.bam~  ~override~
COPY ~1pp/item/v2_copy/ichan05.bam~  ~override~
COPY ~1pp/item/v2_copy/ichan07.bam~  ~override~
COPY ~1pp/item/v2_copy/iclck03.bam~  ~override~
COPY ~1pp/item/v2_copy/iclck04.bam~  ~override~
COPY ~1pp/item/v2_copy/iclck05.bam~  ~override~
COPY ~1pp/item/v2_copy/iclck06.bam~  ~override~
COPY ~1pp/item/v2_copy/iclck09.bam~  ~override~
COPY ~1pp/item/v2_copy/iclck10.bam~  ~override~
COPY ~1pp/item/v2_copy/iclck11.bam~  ~override~
COPY ~1pp/item/v2_copy/iclck12.bam~  ~override~
COPY ~1pp/item/v2_copy/iclck13.bam~  ~override~
COPY ~1pp/item/v2_copy/iclck14.bam~  ~override~
COPY ~1pp/item/v2_copy/iclck15.bam~  ~override~
COPY ~1pp/item/v2_copy/iclck16.bam~  ~override~
COPY ~1pp/item/v2_copy/iclck17.bam~  ~override~
//COPY ~1pp/item/v2_copy/idagg11.bam~  ~override~ // Boomerang Dagger getting unnecessarily overwritten with Dagger of Venom (imisc75.bam)
COPY ~1pp/item/v2_copy/ihalb03.bam~  ~override~
COPY ~1pp/item/v2_copy/ihalb10.bam~  ~override~
COPY ~1pp/item/v2_copy/ihalb12.bam~  ~override~
COPY ~1pp/item/v2_copy/ihamm10.bam~  ~override~
COPY ~1pp/item/v2_copy/ihelm00.bam~  ~override~
COPY ~1pp/item/v2_copy/ihelm01.bam~  ~override~
COPY ~1pp/item/v2_copy/ihelm02.bam~  ~override~
COPY ~1pp/item/v2_copy/ihelm03.bam~  ~override~
COPY ~1pp/item/v2_copy/ihelm04.bam~  ~override~
COPY ~1pp/item/v2_copy/ihelm05.bam~  ~override~
//COPY ~1pp/item/v2_copy/ihelm06.bam~  ~override~ // Roranach's Horn getting weird IWD icon
COPY ~1pp/item/v2_copy/ihelm07.bam~  ~override~
COPY ~1pp/item/v2_copy/ihelm14.bam~  ~override~
COPY ~1pp/item/v2_copy/ihelm31.bam~  ~override~
COPY ~1pp/item/v2_copy/ihelm32.bam~  ~override~
COPY ~1pp/item/v2_copy/ileat01.bam~  ~override~
COPY ~1pp/item/v2_copy/ileat04.bam~  ~override~
COPY ~1pp/item/v2_copy/iplat01.bam~  ~override~
COPY ~1pp/item/v2_copy/iplat09.bam~  ~override/1plat02.bam~
COPY ~1pp/item/v2_copy/iplot01f.bam~ ~override~
COPY ~1pp/item/v2_copy/iqbull02.bam~ ~override~
COPY ~1pp/item/v2_copy/iquiv01.bam~  ~override~
COPY ~1pp/item/v2_copy/ishld17.bam~  ~override~
COPY ~1pp/item/v2_copy/ishldds.bam~  ~override~
COPY ~1pp/item/v2_copy/ishldfs.bam~  ~override~
COPY ~1pp/item/v2_copy/ishldgn.bam~  ~override~
COPY ~1pp/item/v2_copy/ishldhm.bam~  ~override~
COPY ~1pp/item/v2_copy/ishldk2.bam~  ~override~
COPY ~1pp/item/v2_copy/ishldrf.bam~  ~override~
COPY ~1pp/item/v2_copy/ishldvr.bam~  ~override~
COPY ~1pp/item/v2_copy/ishldzs.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h02.bam~  ~override~
//COPY ~1pp/item/v2_copy/isw1h06.bam~  ~override~ // Varscona getting unnecessarily overwritten with Long Sword +3 (isw1h73.bam)
COPY ~1pp/item/v2_copy/isw1h16.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h42.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h51.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h58.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h59.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h60.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h61.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h62.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h63.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h64.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h65.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h66.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h67.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h68.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h69.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h70.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h71.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h72.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h73.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h74.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h75.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h76.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1h77.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1hbs.bam~  ~override~
COPY ~1pp/item/v2_copy/isw1hrc.bam~  ~override/isw1h23.bam~ // Rashad's Talon
COPY ~1pp/item/v2_copy/isw1hrn.bam~  ~override/isw1h06.bam~ // Varscona
COPY ~1pp/item/v2_copy/isw1hwk.bam~  ~override/isw1h52.bam~ // Water's Edge
COPY ~1pp/item/v2_copy/isw2h07.bam~  ~override/isw2h16.bam~ // Harbinger getting unnecessarily overwritten
COPY ~1pp/item/v2_copy/isw2h17.bam~  ~override~
COPY ~1pp/item/v2_copy/isw2h20.bam~  ~override~
COPY ~1pp/item/v2_copy/iwand01.bam~  ~override~
COPY ~1pp/item/v2_copy/iwand02.bam~  ~override~
COPY ~1pp/item/v2_copy/iwand03.bam~  ~override~
COPY ~1pp/item/v2_copy/iwand04.bam~  ~override~
COPY ~1pp/item/v2_copy/iwand05.bam~  ~override~
COPY ~1pp/item/v2_copy/iwand06.bam~  ~override~
COPY ~1pp/item/v2_copy/iwand07.bam~  ~override~
COPY ~1pp/item/v2_copy/iwand08.bam~  ~override~
COPY ~1pp/item/v2_copy/iwand09.bam~  ~override~
COPY ~1pp/item/v2_copy/iwand10.bam~  ~override~
COPY ~1pp/item/v2_copy/iwand11.bam~  ~override~
COPY ~1pp/item/v2_copy/sw1hwk.itm~ ~override~


PRINT ~Do you want to include updated potion graphics?  

1. Yes please.
2. Heavens no -- *Everything* but Potions!

PLEASE ENTER  1 OR 2  ~
ACTION_READLN how
OUTER_WHILE NOT(IS_AN_INT %how%) || (%how% > 2) || (%how% < 1) BEGIN
 PRINT ~Do you want to include updated potion graphics?  

1. Yes please.
2. Heavens no -- *Everything* but Potions!

PLEASE ENTER  1 OR 2  ~
 ACTION_READLN how
END

ACTION_IF (%how% = 1) THEN BEGIN
PRINT ~Copying...~
COPY ~1pp/item/v2_copy/ipotn52.bam~  ~override~
COPY ~1pp/item/v2_copy/ipotn55.bam~  ~override~
 END


 
 
 
ACTION_IF (FILE_EXISTS_IN_GAME ~BW02CHB1.BAM~) THEN BEGIN
PRINT ~BW Herbs detected. Installing patches...~

  ACTION_FOR_EACH ~icon~ IN ~BW02CHB1~ ~BW02CHB2~ ~BW02CHB3~ ~BW02CHB4~ ~BW02CHB5~ ~BW02IDG1~ ~BW02IDG2~ ~BW02IHB1~ ~BW02IHB2~ ~BW02IHB3~ ~BW02IHB4~ ~BW02IHB5~ ~BW02IPO1_l~ ~BW02IPO3~ ~BW02IST1~ ~BW02IST2~  BEGIN
    COPY ~1pp/item/BW_Herbs_bg2/bam/%icon%.BAM~ ~override~
    END


  ACTION_FOR_EACH ~item~ IN ~BW02BLUN~ ~BW02DG1~ ~BW02DG2~ ~BW02DG3~ ~BW02DG4~ ~BW02DG5~ ~BW02DG6~ ~BW02PO02~ ~BW02PO04~ ~BW02PO05~ ~BW02PO06~ ~BW02PO07~ ~BW02PO09~ ~BW02PO10~ ~BW02ST1~ ~BW02ST2~ ~BW02ST3~ ~BW02ST4~ ~BW02ST5~ ~BW02ST6~  BEGIN

 OUTER_SET uname = 0
 OUTER_SET iname = 0
 OUTER_SET udesc = 0
 OUTER_SET idesc = 0
 
    ACTION_IF (FILE_EXISTS_IN_GAME ~%item%.ITM~) THEN BEGIN
COPY_EXISTING ~%item%.itm~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    READ_LONG  0x8 uname
    READ_LONG  0xc iname
	READ_LONG  0x50 udesc
    READ_LONG  0x54 idesc
      END
	  
COPY ~1pp/item/BW_Herbs_bg2/itm/%item%.ITM~ ~override~
 PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    WRITE_LONG  0x8 uname
    WRITE_LONG  0xc iname
	WRITE_LONG  0x50 udesc
    WRITE_LONG  0x54 idesc
      END
	  
  END 
 
 END
 
END


